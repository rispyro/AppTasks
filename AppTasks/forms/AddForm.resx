<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADVCQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAACYdJREFUeJzt3EuIpUcZx+E3EQUVooImkyAuBFFBI+4CMoIuJC4iuBhE
        yU5FQdGN6MIQDyiCiyDEUXdGgqsRBclGEV2JFyIizIDg3Y14QYN4mSw0WtU9nbHTt3P6fO+pr756Hviv
        0zNV9evM9HRHAAAAAAAAAAAAAAAAAAAAAAAAAAAAdOhZZW8s+3jZ5bIrlrLLN36PL974PYemnlv2sbI/
        lf3Xdro/ln30xhnAzr2u7NfR/iGMvl+VvfaMs4JJvbns79H+8tv+6lm86dQTg4m8vOzP0f7S2+H9pewV
        p5wbTOJ70f6y2/H7QdktJx8dbOdt0f6S2+m778TTgy09Fu0vuJ2+b5x4erCF55X9K9pfcDt99Yx8aZDJ
        1S/7tb7ctt58WZDJvTXaX2xbb/eecIYsSP3b3lr6D5d9pezx2P8Xef+I9hfQlrl6t+q/QKx3rd65D5W9
        JnzlYafuLPtE2S+j/YUwq/tF2YOxfzdJckfZF8qejPYHbnbcrsf+NyzdHkym/u/V+8ueiPYHbLbO/lr2
        3mBrLyz7erQ/ULPz7KtlLwjOpf556qfR/hDNttm1spcGG7krfKutLWf1W5b9BeGa6v/2X432h2Y25er/
        zd4WnOlr0f6wzDJWf6wZp6h/29/6kMwy957gWPXr/L7UZ0tf/cElLwmO+GK0PxyzXezh4JAL4VttbZzV
        fzFYv9LFDatofyhmu9wDwZ76T319Y4+Ntp+H7yLcc3e0PwyzFnt1sPf9/K0PwqzFPhjs/WCF1gdh1mKP
        Bns/XaX1QZi12A+D+EO0PwizFvt9EP+M9gdh1mL1ZwwO76mY/jf2obJLE++hhI/TctbL+de7P7yMC3Ap
        4eO8lPSx2tjnP7zRL4CNff7DG/0C2NjnP7zRL4CNff7DG/0C2NjnP7zRL4CNff7DG/0C2NjnP7zRL4CN
        ff7DG/0C2NjnP7zRL4CNff7DG/0C2NjnP7zRL4CNff7DG/0C2NjnP7zRL4CNff7DG/0C2NjnP7zRL4CN
        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
        r8iWutqXNAAAAABJRU5ErkJggg==
</value>
  </data>
</root>