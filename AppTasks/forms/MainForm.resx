<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>